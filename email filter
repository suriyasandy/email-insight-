from datetime import datetime, timedelta

# Prepare the dates you want to filter (last 12 days, but only weekdays)
today = datetime.now()
dates = [today - timedelta(days=i) for i in range(12)]
weekdays = [d for d in dates if d.weekday() < 5]  # Monday=0, ..., Friday=4

# Collect items for each weekday and concatenate into one list
all_items = []
for date in weekdays:
    date_str = date.strftime('%m/%d/%Y')
    start_time = f"{date_str} 12:00:00 AM"
    end_time = f"{date_str} 11:59:59 PM"
    filter_str = f"[ReceivedTime] >= '{start_time}' AND [ReceivedTime] <= '{end_time}'"
    items = folder.Items.Restrict(filter_str)
    # Convert Outlook Items to list explicitly for concatenation
    for item in items:
        all_items.append(item)

# Now sort combined items by date descending (if needed)
all_items.sort(key=lambda x: x.ReceivedTime, reverse=True)

# Later: iterate over all_items for further entity extraction logic
# Example:
for item in all_items:
    if item.Class == 43:
        subject = item.Subject or ""
        body = item.Body or ""
        html_body = ""
        try:
            html_body = item.HTMLBody
        except:
            pass
        # Continue as in your original logic...
